name: Java Gradle Build and AWS EC2 Deployment

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Gradle
        run: gradle build -x test
        
      - name: Install SSH client
        run: sudo apt-get install openssh-client -y
        
      - name: Copy build file to EC2 instance
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          scp -i ~/.ssh/ec2_key.pem -o StrictHostKeyChecking=no build/libs/spring-boot-aws-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/opt

      - name: Run application on EC2 instance
        run: ssh -i ${{ secrets.EC2_PRIVATE_KEY }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "sudo kill \$(sudo lsof -t -i:8080) && java -jar spring-boot-aws-0.0.1-SNAPSHOT.jar"


#       - name: SSH into EC2 instance
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USERNAME }}
#           key: ${{ secrets.EC2_PRIVATE_KEY }}
#           passphrase: ${{ secrets.EC2_PRIVATE_KEY_PASSPHRASE }}

#           # Commands to run on the EC2 instance
#           script: |
#             # Replace with the desired commands for deployment
#             sudo systemctl stop your-service
#             sudo rm -rf /var/www/html/*
#             sudo cp build/libs/my-app.jar /var/www/html/
#             sudo systemctl start your-service
